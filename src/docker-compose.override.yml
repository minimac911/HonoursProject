version: '3.4'

services:
  #MySQL 
  mysql:
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "4000:3306"
    volumes: 
      #- mysql-db-data:/var/lib/mysql
      - ./_MySQL_Scripts:/docker-entrypoint-initdb.d

  adminer:
    container_name: adminer
    restart: always
    ports:
      - 8080:8080
  
  #Rabbit MQ
  rabbitmq:
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"

  #Microservices
  catalog-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - DockerConnectionString=Server=mysql;Database=honoursproject_services_catalog;User=root;Password=root
      - EventBusConnection=${SERVICE_BUS_CONNECTION:-rabbitmq}
      - EventBusUserName=${SERVICE_BUS_USERNAME}
      - EventBusPassword=${SERVICE_BUS_PASSWORD}
      - EventBusRetryCount=5
      - SubscriptionClientName=Catalog
      - IamServiceUrl=http://iam
    ports:
      - "5101:80"

  cart-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - DockerConnectionString=Server=mysql;Database=honoursproject_services_cart;User=root;Password=root
      - EventBusConnection=${SERVICE_BUS_CONNECTION:-rabbitmq}
      - EventBusUserName=${SERVICE_BUS_USERNAME}
      - EventBusPassword=${SERVICE_BUS_PASSWORD}
      - EventBusRetryCount=5
      - SubscriptionClientName=Cart
      - IamServiceUrl=http://iam
    ports:
      - "5102:80"

  order-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - DockerConnectionString=Server=mysql;Database=honoursproject_services_order;User=root;Password=root
      - EventBusConnection=${SERVICE_BUS_CONNECTION:-rabbitmq}
      - EventBusUserName=${SERVICE_BUS_USERNAME}
      - EventBusPassword=${SERVICE_BUS_PASSWORD}
      - EventBusRetryCount=5
      - SubscriptionClientName=Order
      - IamServiceUrl=http://iam
    ports:
      - "5103:80"

  #IAM Service
  iam:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - DockerConnectionString=Server=mysql;Database=honoursproject_services_iam;User=root;Password=root
      - JwtSecurityKey=${JWT_SECURITY_KEY}
    ports:
      - "5100:80"

  webmvc:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ApiGatewayUrl=http://webcore-api-gateway
      - IamServiceUrl=http://iam
      - urls__mvc=http://localhost
    ports:
      - "80:80"

  #API Gateway
  webcore-api-gateway:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IamServiceUrl=http://iam
    ports:
      - "5200:80"

  web-aggregator:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - urls__cart=http://cart-api
      - urls__catalog=http://catalog-api
      - urls__orders=http://order-api
      - CartUrlHC=http://cart-api/hc
      - CatalogUrlHC=http://catalog-api/hc
      - OrderingUrlHC=http://ordering-api/hc
      #- IdentityUrlExternal=http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5105
    ports:
      - "5120:80"

volumes:
  mysql-db-data:
     external: false


