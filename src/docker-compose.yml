version: '3.4'

services:
  #MySQL 
  mysql:
    image: mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10


  adminer:
    image: adminer
    depends_on: 
      - mysql

  #Rabbit MQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3


  

  #Microservices
  catalog-api:
    image: ${DOCKER_REGISTRY-}catalog
    build:
      context: .
      dockerfile: Services/Catalog/Dockerfile
    depends_on: 
      rabbitmq:
        condition: service_healthy
      mysql:
        condition: service_healthy

  cart-api:
    image: ${DOCKER_REGISTRY-}cart
    build:
      context: .
      dockerfile: Services/Cart/Dockerfile
    depends_on: 
      rabbitmq:
        condition: service_healthy
      mysql:
        condition: service_healthy

  order-api:
    image: ${DOCKER_REGISTRY-}order
    build:
      context: .
      dockerfile: Services/Order/Dockerfile
    depends_on: 
      rabbitmq:
        condition: service_healthy
      mysql:
        condition: service_healthy

  # IAM Service
  iam:
    image: ${DOCKER_REGISTRY-}iamservice
    build:
      context: .
      dockerfile: Services/IAM/Dockerfile
    depends_on:
      mysql:
        condition: service_healthy

  webmvc:
    image: ${DOCKER_REGISTRY-}webmvc
    build:
      context: .
      dockerfile: Web/WebMVC/Dockerfile
    depends_on: 
      - webcore-api-gateway

 

  #API Gateway
  webcore-api-gateway:
    image: ${DOCKER_REGISTRY-}webcoreapi
    build:
      context: .
      dockerfile: ApiGateways/Ocelot/WebCoreAPI/Dockerfile
    depends_on:
      - catalog-api
      - cart-api
      - order-api

  web-aggregator:
    image: ${DOCKER_REGISTRY-}webhttpaggregator
    build:
      context: .
      dockerfile: ApiGateways/BFF/WebHttpAggregator/Dockerfile

  

